---
- name: "Add Docker gpg key"
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: "/etc/apt/trusted.gpg.d/docker.asc"
    mode: "0644"

- name: "Add docker repository"
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: "Install Docker"
  ansible.builtin.apt:
    pkg:
      - "docker-ce"
      - "docker-ce-cli"
      - "containerd.io"
      - "docker-compose-plugin"
    state: present
    update_cache: true
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: "Create /etc/docker directory"
  ansible.builtin.file:
    path: "/etc/docker"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: "Add Docker daemon.json"
  ansible.builtin.template:
    src: "daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    mode: "0644"
    owner: root
    group: root
  notify:
    - Restart docker

- name: "Set cronjob to cleanup system"
  ansible.builtin.cron:
    name: "docker system prune"
    state: present
    minute: "0"
    hour: "0"
    user: root
    job: "/usr/bin/timeout --preserve-status -s 9 5m /usr/bin/docker system prune -a -f"
